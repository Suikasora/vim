
  #____ ____  ____               _    _ _           _ 
 #/ ___|  _ \|  _ \             / \  (_) |__  _   _(_)
#| |   | |_) | |_) |  _____    / _ \ | | '_ \| | | | |
#| |___|  __/|  __/  |_____|  / ___ \| | | | | |_| | |
 #\____|_|   |_|             /_/   \_\_|_| |_|\__,_|_|
                                                     


#include
snippet inc "base include in ACM" bA
#include <bits/stdc++.h>
using namespace std;
////////////////////////QWQ

${0}
endsnippet

snippet #inc "include" bA
#include <${1}>
${0}
endsnippet

snippet #def "#define" bA
#define ${0}
endsnippet

#main
snippet intm "int main" bA
int main(void)
{
	${0:let's begin!}
	return 0;
}
endsnippet
#for
snippet for "i=0,n times"
for(int ${1} = 0;$1 < ${2};$1++){
	${0:gogogo!}
}
endsnippet

snippet for1 "i=1,n times"
for(int ${1} = 1;$1 <= ${2};$1++){
	${0:gogogo!}
}
endsnippet
#while
snippet while "base"
while( ${1} ){
	${0}
}
endsnippet
#if
snippet if "base"
if( ${1} ){
	${0}
}
endsnippet

snippet else "base"
else{
	${0}
}
endsnippet

#===============================vector
snippet vec
vector<${1}>${0:ja!};
endsnippet

snippet vecs "vector string" A
vector<string>${0};
endsnippet

snippet vector2 "vector<vector>" A
vector<vector<${1}>>obj(${2},vector<$1>(${3}));
endsnippet

snippet reverse
reverse(${1}.begin(),$1.end());
endsnippet
#===================================struct
snippet struct "struct" b
struct ${1:name}{
	${2}
}${0};
endsnippet
#===================================class
snippet class "class" bA
class ${1:name}{
	public:
		${2}
	private:
		${3}
};
endsnippet
#===================================define
snippet ll "long long" A
long long ${0}
endsnippet
#===================================Func ===================================
snippet f "function def" b
${1:void} ${2:name}($3){
	$4
}
endsnippet
#===================================Commonly used
snippet times
int times=0;
scanf("%d",&times);
while(times--){
	${0}
}
endsnippet

#===================================Error correction

snippet dolble
double ${0}
endsnippet
snippet doubje
double ${0}
endsnippet
snippet flase
false${0}
endsnippet

#===================================Useful func()
snippet sfac "factorial()" bA
factorial(int n)
{
	if(n==0 || n==1)
		return 1;
	else
		return n*fac(n-1);
}
${0}
endsnippet

snippet sprime "Judging prime numbers" bA
int prime(int i)
{
	int j;
	if(i<=1) return 0;
	if(i==2) return 1;
	for(j=2;j<=(int)(sqrt((double)i));j++)
		if(!(i%j)) return 0;
	return 1;
}
${0}
endsnippet

snippet ssortl "n*log2n" bA
sort(${1:begin},${2:end});
endsnippet

snippet ssortg " " bA
sort(${1:begin},${2:end},greater<${3:data-tape}>());
endsnippet

snippet BFS "Breadth-First Search"
void BFS( ${1} )
{
	queue<${2}>q;
	$2 start,next;
	while( !q.empty() ){
		start=q.front();
		q.pop();
		for${0}
	}
}
endsnippet

#===================================Bitwise operation
snippet parity "judging parity (judging even)"
if( ( ${1} & 1 ) == 0 ){
	${0}
}
endsnippet

snippet sSwap "swap a&b by bitwise operation" 
void Swap(int &a, int &b)
{
	if( a != b )
	{
		a ^= b;
		b ^= a;
		a ^= b;
	}
}
endsnippet


#===================================
#===================================
#===================================
#snippet YI "b"
#acpi `acpi`
#`data`
#endsnippet

#snippet indent
#Indent is: `!v indent(".")`
#endsnippet

#snippet search 
#ww `!v :h why`
#endsnippet

#snippet pyth
#python `!p print('A is B')`
#endsnippet

#snippet "colou?r" "r" r
#wonderful
#endsnippet

#===================================.C #===================================
snippet typedefs "typedef struct" A
typedef struct ${1:name}{
${2};
}${3:structname};
endsnippet
#===================================<stdlib.h>
snippet malloc "" A
(${1})malloc(${2});
endsnippet

snippet calloc "" A
(${1})calloc( ${2} , ${3} );
endsnippet

snippet realloc "" A
(${1})realloc( ${2} , ${3} );
endsnippet
